@page "/"
@using System.ComponentModel.DataAnnotations
@inject IMessageService MessageService
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="container">
    <div class="header">
        <h1>Send a Text Message</h1>
        <p>Enter the recipient's phone number and your message below.</p>
    </div>

    <div class="form-section">
        <EditForm Model="messageModel" OnValidSubmit="HandleValidSubmit" FormName="SendMessageForm">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <div class="form-group">
                <label for="to">Recipient Phone Number</label>
                <InputText id="to" class="form-control" @bind-Value="messageModel.To"/>
                <ValidationMessage For="@(() => messageModel.To)"/>
            </div>

            <div class="form-group">
                <label for="text">Message</label>
                <InputTextArea id="text" class="form-control" @bind-Value="messageModel.Text"/>
                <ValidationMessage For="@(() => messageModel.Text)"/>
            </div>

            <button type="submit" class="btn btn-primary">Send Message</button>
        </EditForm>
    </div>
</div>

<WebhookEvents/>


@code {
    private MessageModel messageModel = new MessageModel();

    private async Task HandleValidSubmit()
    {
        await MessageService.SendTextMessageAsync(messageModel);
        messageModel = new MessageModel();
    }

    public class MessageModel
    {
        [Required(ErrorMessage = "Recipient phone number is required")]
        [Phone(ErrorMessage = "Please enter a valid phone number")]
        public string To { get; set; }

        [Required(ErrorMessage = "Message text is required")]
        [MaxLength(160, ErrorMessage = "Message cannot exceed 160 characters")]
        public string Text { get; set; }
    }

}